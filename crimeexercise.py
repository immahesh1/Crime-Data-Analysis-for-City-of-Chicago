# -*- coding: utf-8 -*-
"""CrimeExercise.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1JFMdQJutbIUcDy262U8o6Ef3Zwc6oo85
"""

!apt-get update
!apt-get install openjdk-8-jdk-headless -qq > /dev/null
!wget -q http://archive.apache.org/dist/spark/spark-2.3.1/spark-2.3.1-bin-hadoop2.7.tgz
!tar xf spark-2.3.1-bin-hadoop2.7.tgz
!pip install -q findspark

import os
os.environ["JAVA_HOME"] = "/usr/lib/jvm/java-8-openjdk-amd64"
os.environ["SPARK_HOME"] = "/content/spark-2.3.1-bin-hadoop2.7"

!ls

import findspark
findspark.init()
from pyspark import SparkContext

sc = SparkContext.getOrCreate()
sc

import pyspark
from pyspark.sql import SparkSession
spark = SparkSession.builder.getOrCreate() 
spark

!wget https://data.cityofchicago.org/api/views/ijzp-q8t2/rows.csv?accessType=DOWNLOAD

!ls

!mv rows.csv?accessType=DOWNLOAD crime_data.csv

!ls

from pyspark.sql.functions import to_timestamp,col,lit
rc = spark.read.csv('crime_data.csv',header=True).withColumn('Date',to_timestamp(col('Date'),'MM/dd/yyyy hh:mm:ss a')).filter(col('Date') <= '2018-11-11')

rc.show(5)

rc.printSchema()

from pyspark.sql.types import BooleanType
# rc = rc.withColumn('Arrest',rc['Arrest'].cast(BooleanType())) #since type of Arrest is String so changing it to Boolean

rc.select('Arrest').distinct().show()

num_arrested_true = rc.filter(col('Arrest') == 'true').count()
num_arrested_true

total_crime_filed = rc.count()
total_crime_filed

percentage_of_arrest = (num_arrested_true * 100) / total_crime_filed 
print(percentage_of_arrest,"%")

"""**Problem 2: Top 3 location for reported crime.**"""

rc.show(5)

rc.select('Location Description').distinct().show(5,False)

rc.groupBy('Location Description').count().orderBy('count',ascending=False).show(3)

